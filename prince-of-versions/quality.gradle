apply plugin: 'checkstyle'
//apply plugin: 'findbugs'
apply plugin: 'pmd'

check.dependsOn 'findbugs', 'checkstyle', 'pmd'

task checkstyle(type: Checkstyle) {
    configFile file("${rootProject.rootDir}/config/checkstyle.xml")
    configProperties = [
            'checkstyle.cache.file'      : rootProject.file('build/checkstyle.cache'),
            'checkstyle.suppression.file': file("${rootProject.rootDir}/config/suppressions.xml")
    ]
    source 'src'
    include '**/*.java'
    exclude '**/gen/**', '**/test/**', '**/androidTest/**'

    classpath = files()
}

//task findbugs(type: FindBugs) {
//    ignoreFailures = false
//    effort = "max"
//    reportLevel = "high"
//    excludeFilter = file("${rootProject.rootDir}/config/findbugs-filter.xml")
//    classes = files("$project.buildDir/intermediates/javac")
//    maxHeapSize = "256m"
//
//    source 'src'
//    include '**/*.java'
//    exclude '**/gen/**'
//
//    reports {
//        xml.enabled = false
//        html.enabled = true
//        html {
//            destination = file("${project.buildDir}/reports/findbugs/findbugs.html")
//        }
//    }
//
//    classpath = files()
//}

task pmd(type: Pmd) {
    ruleSetFiles = files("${rootProject.rootDir}/config/pmd-ruleset.xml")
    ignoreFailures = false
    ruleSets = ["java-basic", "java-braces", "java-android"]

    ruleSets = [
            'java-android',
            'java-braces',
            'java-clone',
            'java-finalizers'
    ]

    source 'src'
    include '**/*.java'
    exclude '**/gen/**', '**/test/**', '**/androidTest/**'

    reports {
        xml.enabled = false
        html.enabled = true
    }
}
