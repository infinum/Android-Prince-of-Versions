apply plugin: "maven"
apply plugin: "signing"

/*
variables:
ext.publishing.maven {
    group: "co.infinum"
    version: versions.prince
    artifact: "prince-of-versions"
    repository: {
        url: "..."
        username: "..."
        password: "..."
    }
    name: "Prince of Versions"
    description: "Library that checks for updates using configuration from remote or local resources"
    url: "..."
    scm: {
        connection: "..."
        url: "..."
    }
}
 */

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                def props = project.ext.mavenPublishProperties

                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.groupId = props.group
                pom.version = props.version
                pom.artifactId = props.artifact

                repository(url: props.repository.url) {
                    authentication(userName: props.repository.username, password: props.repository.password)
                }

                pom.project {
                    name = props.name
                    description = props.description
                    url = props.url
                    packaging = "aar"

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'NikoPelicaric'
                            name = 'Niko Pelicaric'
                            email = 'niko.pelicaric@infinum.com'
                        }
                        developer {
                            id = 'antunflas'
                            name = 'Antun Fla≈°'
                            email = 'antun.flas@infinum.com'
                        }
                    }
                    scm {
                        connection = props.scm.connection
                        developerConnection = props.scm.connection
                        url = props.scm.url
                    }
                }

            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadocsJar(type: Jar, dependsOn: javadocs) {
        classifier = 'javadoc'
        from javadocs.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocsJar
    }
}
